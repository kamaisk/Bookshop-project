(()=>{"use strict";var __webpack_modules__={"./src/assets/images/png/cover/cover1.png":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "assets/img/cover1.a52e241e.png";\n\n//# sourceURL=webpack://bookshop-project/./src/assets/images/png/cover/cover1.png?')},"./src/assets/images/png/cover/cover2.png":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "assets/img/cover2.a574e4ce.png";\n\n//# sourceURL=webpack://bookshop-project/./src/assets/images/png/cover/cover2.png?')},"./src/assets/images/png/cover/cover3.png":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "assets/img/cover3.c1e07c35.png";\n\n//# sourceURL=webpack://bookshop-project/./src/assets/images/png/cover/cover3.png?')},"./src/assets/images/png/cover/cover4.png":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "assets/img/cover4.38650f27.png";\n\n//# sourceURL=webpack://bookshop-project/./src/assets/images/png/cover/cover4.png?')},"./src/assets/images/png/cover/cover5.png":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "assets/img/cover5.29626f76.png";\n\n//# sourceURL=webpack://bookshop-project/./src/assets/images/png/cover/cover5.png?')},"./src/assets/images/png/cover/cover6.png":(module,__unused_webpack_exports,__webpack_require__)=>{eval('module.exports = __webpack_require__.p + "assets/img/cover6.c2eb9187.png";\n\n//# sourceURL=webpack://bookshop-project/./src/assets/images/png/cover/cover6.png?')},"./src/assets/scripts/books/api.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchBooks: () => (/* binding */ fetchBooks)\n/* harmony export */ });\n// Функция для загрузки книг из Google Books API\nasync function fetchBooks(category) {\n  let startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let maxResults = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 6;\n  const API_KEY = "AIzaSyC6l1iFpKRJljJ0m2Uq-4mqOk6qN2opkD0";\n  const BASE_URL = "https://www.googleapis.com/books/v1/volumes";\n  const url = `${BASE_URL}?q=subject:${encodeURIComponent(category)}&key=${API_KEY}&printType=books&startIndex=${startIndex}&maxResults=${maxResults}&langRestrict=en`;\n  try {\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`); // Обработка ошибок\n    }\n    const data = await response.json();\n    return data.items || [];\n  } catch (error) {\n    console.error("Ошибка загрузки книг:", error);\n    return [];\n  }\n}\n\n//# sourceURL=webpack://bookshop-project/./src/assets/scripts/books/api.js?')},"./src/assets/scripts/books/main.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _api__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./api */ "./src/assets/scripts/books/api.js");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storage */ "./src/assets/scripts/books/storage.js");\n/* harmony import */ var Images_png_cover_cover1_png__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! Images//png/cover/cover1.png */ "./src/assets/images/png/cover/cover1.png");\n/* harmony import */ var Images_png_cover_cover2_png__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! Images//png/cover/cover2.png */ "./src/assets/images/png/cover/cover2.png");\n/* harmony import */ var Images_png_cover_cover3_png__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! Images//png/cover/cover3.png */ "./src/assets/images/png/cover/cover3.png");\n/* harmony import */ var Images_png_cover_cover4_png__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! Images//png/cover/cover4.png */ "./src/assets/images/png/cover/cover4.png");\n/* harmony import */ var Images_png_cover_cover5_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! Images//png/cover/cover5.png */ "./src/assets/images/png/cover/cover5.png");\n/* harmony import */ var Images_png_cover_cover6_png__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! Images//png/cover/cover6.png */ "./src/assets/images/png/cover/cover6.png");\n\n\n\n\n\n\n\n\n\n// Так как API не возвращает обложку, подставим вместо неё рандомную картинку-плейсхолдер из массива\nconst covers = [Images_png_cover_cover1_png__WEBPACK_IMPORTED_MODULE_2__, Images_png_cover_cover2_png__WEBPACK_IMPORTED_MODULE_3__, Images_png_cover_cover3_png__WEBPACK_IMPORTED_MODULE_4__, Images_png_cover_cover4_png__WEBPACK_IMPORTED_MODULE_5__, Images_png_cover_cover5_png__WEBPACK_IMPORTED_MODULE_6__, Images_png_cover_cover6_png__WEBPACK_IMPORTED_MODULE_7__];\nconst booksContainer = document.querySelector(".books-wrapper");\nconst cartIcon = document.querySelector(".cart-icon");\nconst categoriesList = document.querySelector(".categories-list");\nconst loadMoreBtn = document.querySelector(".btn-load-more");\nlet currentCategory = "Architecture";\nlet allBooks = []; // Глобальный массив для хранения книг\nlet startIndex = 0;\n\n// Функция для загрузки книг по категориям\nasync function loadBooks(category) {\n  let reset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  if (reset) {\n    startIndex = 0;\n    allBooks = [];\n    booksContainer.innerHTML = "";\n  }\n  const books = await (0,_api__WEBPACK_IMPORTED_MODULE_0__.fetchBooks)(category, startIndex);\n  if (books) {\n    allBooks.push(...books);\n    displayBooks(books);\n    startIndex += books.length;\n  }\n}\n\n// Функция для добавления активной категории книги\nfunction updateActiveCategory(selectedCategory) {\n  const categoriesItems = document.querySelectorAll(".categories-list li");\n  categoriesItems.forEach(item => {\n    if (item.dataset.category === selectedCategory) {\n      item.classList.add("active");\n    } else {\n      item.classList.remove("active");\n    }\n  });\n}\n\n// Функция для случайного выбора обложки книги из массива\nfunction getRandomCover() {\n  const randomIndex = Math.floor(Math.random() * covers.length);\n  return covers[randomIndex];\n}\n\n// Функция для отображения книг\nfunction displayBooks(books) {\n  const cart = (0,_storage__WEBPACK_IMPORTED_MODULE_1__.loadFromStorage)("cartItems");\n  booksContainer.innerHTML += books.map(book => {\n    const volumeInfo = book.volumeInfo;\n    const saleInfo = book.saleInfo;\n    const bookId = book.id;\n    console.log(book);\n\n    // Обложка\n    const cover = getRandomCover();\n    // Авторы\n    const authors = volumeInfo.authors ? volumeInfo.authors.join(", ") : "Неизвестный автор";\n    // Заголовок\n    let title = volumeInfo.title || "Без названия";\n    if (title.length > 30) {\n      title = title.substring(0, 30) + "...";\n    }\n    // Рейтинг\n    let ratingHtml = "";\n    if (volumeInfo.averageRating) {\n      const rating = Math.round(volumeInfo.averageRating);\n      const reviewCount = volumeInfo.ratingsCount || 0;\n      ratingHtml = `\n          <div class="book-card__rating"> \n            ${"&#x2605;".repeat(rating)}${"&#x2606;".repeat(5 - rating)} \n            <span class="book-card__review">${reviewCount} review</span>\n          </div>\n          `;\n    }\n    // Описание\n    let description = volumeInfo.description || "Описание отсутствует";\n    if (description.length > 80) {\n      description = description.substring(0, 80) + "...";\n    }\n    // Цена\n    let priceHtml = "";\n    if (saleInfo.listPrice) {\n      priceHtml = `\n          <p class="book-card__price">${saleInfo.listPrice.amount} ${saleInfo.listPrice.currencyCode}</p>\n          `;\n    }\n    // Кнопки\n    const inCart = cart.includes(bookId);\n    const buttonText = inCart ? "In the cart" : "Buy now";\n    const buttonClass = inCart ? "btn-cart" : "btn-buy";\n    return `\n      <div class="book-card" data-id="${bookId}">\n       <img src="${cover}" alt="${title}" class="book-card__cover">\n       <div class="book-card__info">\n          <div>\n          <p class="book-card__authors">${authors}</p>\n          <h3 class="book-card__title">${title}</h3>\n          ${ratingHtml}\n          </div>\n          <p class="book-card__description">${description}</p>\n          ${priceHtml}\n          <button class="${buttonClass}">${buttonText}</button>\n       </div>\n      </div>\n      `;\n  }).join(" ");\n}\n\n// Установить правильное состояние кнопок "Купить" или "В корзине"\nfunction toggleCartButtons(button, inCart) {\n  if (inCart) {\n    button.classList.remove("btn-buy");\n    button.classList.add("btn-cart");\n    button.textContent = "In the cart";\n  } else {\n    button.classList.remove("btn-cart");\n    button.classList.add("btn-buy");\n    button.textContent = "Buy now";\n  }\n}\n\n// Обработчик клика по кнопке "Купить" или "В корзине"\ndocument.addEventListener("click", event => {\n  if (event.target.classList.contains("btn-buy") || event.target.classList.contains("btn-cart")) {\n    const button = event.target;\n    const bookCard = button.closest(".book-card");\n    const bookId = bookCard.dataset.id;\n    if (button.classList.contains("btn-buy")) {\n      (0,_storage__WEBPACK_IMPORTED_MODULE_1__.addToCard)(bookId);\n      toggleCartButtons(button, true);\n    } else {\n      (0,_storage__WEBPACK_IMPORTED_MODULE_1__.removeFromCart)(bookId);\n      toggleCartButtons(button, false);\n    }\n  }\n});\n\n// Очистка корзины при клике на иконку\ncartIcon.addEventListener("click", _storage__WEBPACK_IMPORTED_MODULE_1__.clearCart);\n\n// Обработчик клика по кнопке "Загрузить еще"\nloadMoreBtn.addEventListener("click", () => {\n  loadBooks(currentCategory, false);\n});\n\n// Обработчик клика по категориям\ncategoriesList.addEventListener("click", event => {\n  if (event.target.tagName === "LI") {\n    currentCategory = event.target.dataset.category;\n    updateActiveCategory(currentCategory);\n    loadBooks(currentCategory);\n  }\n});\n\n// Загрузка первой категории при запуске\ndocument.addEventListener("DOMContentLoaded", () => {\n  (0,_storage__WEBPACK_IMPORTED_MODULE_1__.updateCartIcon)((0,_storage__WEBPACK_IMPORTED_MODULE_1__.loadFromStorage)("cartItems").length);\n  updateActiveCategory(currentCategory);\n  loadBooks(currentCategory);\n});\n\n//# sourceURL=webpack://bookshop-project/./src/assets/scripts/books/main.js?')},"./src/assets/scripts/books/storage.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToCard: () => (/* binding */ addToCard),\n/* harmony export */   clearCart: () => (/* binding */ clearCart),\n/* harmony export */   loadFromStorage: () => (/* binding */ loadFromStorage),\n/* harmony export */   removeFromCart: () => (/* binding */ removeFromCart),\n/* harmony export */   saveToStorage: () => (/* binding */ saveToStorage),\n/* harmony export */   updateCartIcon: () => (/* binding */ updateCartIcon)\n/* harmony export */ });\nconst CART_KEY = "cartItems";\n\n// Сохранить товары в localStorage\nfunction saveToStorage(key, value) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n\n// Загрузить товары из localStorage\nfunction loadFromStorage(key) {\n  return JSON.parse(localStorage.getItem(key));\n}\n\n// Функция добавления книги в корзину\nfunction addToCard(bookId) {\n  const cart = loadFromStorage(CART_KEY) || [];\n  if (!cart.includes(bookId)) {\n    cart.push(bookId);\n    saveToStorage(CART_KEY, cart);\n  }\n  updateCartIcon(cart.length);\n}\n\n// Функция удаления книги из корзины\nfunction removeFromCart(bookId) {\n  const cart = loadFromStorage(CART_KEY) || [];\n  const updatedCart = cart.filter(id => id !== bookId);\n  saveToStorage(CART_KEY, updatedCart);\n  updateCartIcon(updatedCart.length);\n}\n\n// Функция обновления иконки корзины\nfunction updateCartIcon(count) {\n  const cartCount = document.querySelector(".cart-icon__count");\n  const cartIcon = document.querySelector(".cart-icon");\n  if (count > 0) {\n    cartCount.textContent = count;\n    cartCount.style.display = "block";\n  } else {\n    cartCount.style.display = "none";\n  }\n}\n\n// Очистка корзины\nfunction clearCart() {\n  saveToStorage(CART_KEY, []);\n  updateCartIcon(0);\n}\n\n//# sourceURL=webpack://bookshop-project/./src/assets/scripts/books/storage.js?')}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var o=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](o,o.exports,__webpack_require__),o.exports}__webpack_require__.d=(e,n)=>{for(var o in n)__webpack_require__.o(n,o)&&!__webpack_require__.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},__webpack_require__.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),__webpack_require__.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},__webpack_require__.p="./";var __webpack_exports__=__webpack_require__("./src/assets/scripts/books/main.js")})();